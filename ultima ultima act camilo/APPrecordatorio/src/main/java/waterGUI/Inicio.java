/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package waterGUI;
import java.time.LocalTime;
/**
 *
 * @author miude
 */
public class Inicio extends javax.swing.JFrame {

    /**
     * Creates new form Inicio
     */
    public Inicio() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblhoralevantar = new javax.swing.JLabel();
        lblhoraacostar = new javax.swing.JLabel();
        lbltitulo = new javax.swing.JLabel();
        spiner_minutos_levantarse = new javax.swing.JSpinner();
        spiner_hora_acostarse = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        spiner_hora_levantarse = new javax.swing.JSpinner();
        spiner_minutos_acostarse = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        boton_ingresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Registro");
        setBackground(new java.awt.Color(0, 255, 153));

        lblhoralevantar.setText("Ingrese la hora a la que se levanta");

        lblhoraacostar.setText("Ingrese la hora a la que se acuesta");

        lbltitulo.setText("REGISTRO DE INFORMACIÓN");

        spiner_minutos_levantarse.setModel(new javax.swing.SpinnerNumberModel(0, 0, 60, 1));

        spiner_hora_acostarse.setModel(new javax.swing.SpinnerNumberModel(0, 0, 24, 1));

        jLabel1.setText("hora");

        jLabel2.setText("minutos");

        spiner_hora_levantarse.setModel(new javax.swing.SpinnerNumberModel(0, 0, 24, 1));

        spiner_minutos_acostarse.setModel(new javax.swing.SpinnerNumberModel(0, 0, 60, 1));

        jLabel3.setText("hora");

        jLabel4.setText("minutos");

        boton_ingresar.setBackground(new java.awt.Color(0, 204, 204));
        boton_ingresar.setForeground(new java.awt.Color(255, 255, 255));
        boton_ingresar.setText("Ingresar Información");
        boton_ingresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_ingresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblhoralevantar)
                            .addComponent(lblhoraacostar))
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(43, 43, 43)
                                .addComponent(jLabel4))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(spiner_hora_acostarse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(spiner_minutos_acostarse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(58, 58, 58)
                                .addComponent(jLabel2))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(spiner_hora_levantarse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(spiner_minutos_levantarse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addComponent(lbltitulo))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(190, 190, 190)
                        .addComponent(boton_ingresar)))
                .addContainerGap(164, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lbltitulo)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblhoralevantar)
                        .addGap(81, 81, 81)
                        .addComponent(lblhoraacostar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spiner_minutos_levantarse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spiner_hora_levantarse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spiner_hora_acostarse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spiner_minutos_acostarse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(boton_ingresar)
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void boton_ingresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_ingresarActionPerformed
        // TODO add your handling code here:
        //aquí programo el botón y la acción requerida
        int hlevantarse, mlevantarse, hacostarse, macostarse;
        
         // la hora actual del sistema
        LocalTime horaActual = LocalTime.now();
        
        hlevantarse = (Integer) this.spiner_hora_levantarse.getValue();
        mlevantarse = (Integer) this.spiner_minutos_levantarse.getValue();
        hacostarse = (Integer) this.spiner_hora_acostarse.getValue();
        macostarse = (Integer) this.spiner_minutos_acostarse.getValue();
        //System.out.println("El dato ingresado es: " + hlevantarse);
        LocalTime horaLevantarse = LocalTime.of(hlevantarse, mlevantarse);
        LocalTime horaAcostarse = LocalTime.of(hacostarse, macostarse);
        
        int intervaloHoras =0;
        int intervaloMinutos=0;
        int intervaloSegundos=20;
        
        this.setVisible(false);
        // Calcular la próxima hora de alerta basada en el intervalo personalizado.
        LocalTime proximaAlerta = horaLevantarse.plusHours(intervaloHoras)
                                                .plusMinutes(intervaloMinutos)
                                                .plusSeconds(intervaloSegundos);

        
        
        // Confirmar el intervalo establecido.
        //System.out.println("El intervalo de alerta establecido es de: " + intervaloHoras + " horas, " + intervaloMinutos + " minutos y " + intervaloSegundos + " segundos.");
        //System.out.println("Esperando hasta la próxima alerta");
        
            // Esperar hasta que llegue la próxima alerta.
        while (horaActual.isBefore(horaLevantarse)) {
            // Esperar 1 segundo antes de verificar el siguiente intervalo
            try
            {
                Thread.sleep(3000);
            }
            catch (InterruptedException e)
            {
                e.printStackTrace();
            }
            //System.out.println("#");
            // Actualizar la hora actual en cada iteración
            horaActual = LocalTime.now();
        }
        
            MensajeRecordatorio objMensajeRecordatorio = new MensajeRecordatorio();
            
            
          // Mostrar mensajes de alerta en intervalos personalizados hasta la hora de acostarse
        while (horaActual.isAfter(horaLevantarse) && horaActual.isBefore(horaAcostarse))
        {
            System.out.println("Es hora de tomar AGUA");
            objMensajeRecordatorio.setVisible(true);
           
            //objMensajeRecordatorio.setVisible(false);
            //Inicio objInicio = new Inicio();
            //objInicio.setVisible(true);//activamos la vista
        
            //implementar confirmación del usuario
            proximaAlerta = proximaAlerta.plusHours(intervaloHoras)
                                        .plusMinutes(intervaloMinutos)
                                        .plusSeconds(intervaloSegundos);

            // Esperar hasta que llegue la próxima alerta
            while (horaActual.isBefore(proximaAlerta))
            {
                try
                {
                    Thread.sleep(3000);
                }
                catch (InterruptedException e)
                {
                    e.printStackTrace();
                }
                // Actualizar la hora actual en cada iteración
                //System.out.println("$");
                horaActual = LocalTime.now();
            }
        }
           System.out.println("Es hora de acostarse.");
        
        
    }//GEN-LAST:event_boton_ingresarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boton_ingresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblhoraacostar;
    private javax.swing.JLabel lblhoralevantar;
    private javax.swing.JLabel lbltitulo;
    private javax.swing.JSpinner spiner_hora_acostarse;
    private javax.swing.JSpinner spiner_hora_levantarse;
    private javax.swing.JSpinner spiner_minutos_acostarse;
    private javax.swing.JSpinner spiner_minutos_levantarse;
    // End of variables declaration//GEN-END:variables
}
